!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BADFUNCS	Makefile	/^BADFUNCS='[^_.>a-zA-Z0-9](str(n?cpy|n?cat|xfrm|n?dup|str|pbrk|tok|_)stpn?cpy|a?sn?printf|byte_)'$/;"	m
BSSSC_BUFF_LEN	src/lcthw/bstrlib.c	2288;"	d	file:
BSTRLIB_INCLUDE	src/lcthw/bstrlib.h	15;"	d
BSTRLIB_NOVSNP	src/lcthw/bstrlib.c	2742;"	d	file:
BSTRLIB_NOVSNP	src/lcthw/bstrlib.h	28;"	d
BSTR_BS_BUFF_LENGTH_GET	src/lcthw/bstrlib.h	34;"	d
BSTR_ERR	src/lcthw/bstrlib.h	32;"	d
BSTR_OK	src/lcthw/bstrlib.h	33;"	d
BS_BUFF_SZ	src/lcthw/bstrlib.c	1770;"	d	file:
CFCLEN	src/lcthw/bstrlib.c	1277;"	d	file:
CFCLEN	src/lcthw/bstrlib.c	1287;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG $(OPTFALGS)$/;"	m
CFLAGS	Makefile	/^dev: CFLAGS=-g -Wall -Isrc -Wall -Wextra $(OPTFLAGS)$/;"	m
INITIAL_STATIC_FIND_INDEX_COUNT	src/lcthw/bstrlib.c	1551;"	d	file:
LDLIBS	Makefile	/^LDLIBS = -ldl $(OPTLIBS)$/;"	m
LIST_FOREACH	src/lcthw/list.h	37;"	d
LONG_BITS_QTY	src/lcthw/bstrlib.c	1274;"	d	file:
LONG_LOG_BITS_QTY	src/lcthw/bstrlib.c	1273;"	d	file:
LONG_TYPE	src/lcthw/bstrlib.c	1275;"	d	file:
List	src/lcthw/list.h	/^typedef struct List{$/;"	s
List	src/lcthw/list.h	/^} List;$/;"	t	typeref:struct:List
ListNode	src/lcthw/list.h	/^typedef struct ListNode {$/;"	s
ListNode	src/lcthw/list.h	/^} ListNode;$/;"	t	typeref:struct:ListNode
List_clear	src/lcthw/list.c	/^void List_clear(List *list){$/;"	f
List_clear_destroy	src/lcthw/list.c	/^void List_clear_destroy( List *list){$/;"	f
List_count	src/lcthw/list.h	25;"	d
List_create	src/lcthw/list.c	/^List *List_create(){$/;"	f
List_destroy	src/lcthw/list.c	/^void List_destroy(List *list ){$/;"	f
List_first	src/lcthw/list.h	26;"	d
List_last	src/lcthw/list.h	27;"	d
List_pop	src/lcthw/list.c	/^void *List_pop( List *list){$/;"	f
List_push	src/lcthw/list.c	/^void List_push(List *list , void *value){$/;"	f
List_remove	src/lcthw/list.c	/^void * List_remove(List *list , ListNode *node){$/;"	f
List_shift	src/lcthw/list.c	/^void *List_shift(List *list){$/;"	f
List_unshift	src/lcthw/list.c	/^void List_unshift(List *list , void *value){$/;"	f
NDEBUG	tests/minunit.h	1;"	d
OBJECTS	Makefile	/^OBJECTS = $(patsubst %.c,%.o,$(SOURCES))$/;"	m
PREFIX	Makefile	/^PREFIX ?= \/usr\/local$/;"	m
RUN_TESTS	tests/minunit.h	15;"	d
SOURCES	Makefile	/^SOURCES = $(wildcard src\/**\/*.c src\/*.c)$/;"	m
SO_TARGET	Makefile	/^SO_TARGET = $(patsubst %.a, %.so , $(TARGET))$/;"	m
START_VSNBUFF	src/lcthw/bstrlib.c	2754;"	d	file:
START_VSNBUFF	src/lcthw/bstrlib.c	2770;"	d	file:
TARGET	Makefile	/^TARGET = build\/liblcthw.a$/;"	m
TESTS	Makefile	/^TESTS = $(patsubst %.c,%,$(TEST_SRC))$/;"	m
TEST_SRC	Makefile	/^TEST_SRC = $(wildcard tests\/*_tests.c)$/;"	m
_CRT_SECURE_NO_WARNINGS	src/lcthw/bstrlib.c	15;"	d	file:
__dbg_h__	src/lcthw/dbg.h	2;"	d
_minunit_h	tests/minunit.h	3;"	d
all_tests	tests/lists_tests.c	/^RUN_TESTS(all_tests);$/;"	v
all_tests	tests/lists_tests.c	/^char *all_tests(){$/;"	f
b	src/lcthw/bstrlib.c	/^	bstring b;$/;"	m	struct:genBstrList	file:
bBlockCopy	src/lcthw/bstrlib.c	66;"	d	file:
bNgetc	src/lcthw/bstrlib.h	/^typedef int (*bNgetc) (void *parm);$/;"	t
bNread	src/lcthw/bstrlib.h	/^typedef size_t (* bNread) (void *buff, size_t elsize, size_t nelem, void *parm);$/;"	t
bStream	src/lcthw/bstrlib.c	/^struct bStream {$/;"	s	file:
balloc	src/lcthw/bstrlib.c	/^int balloc (bstring b, int olen) {$/;"	f
ballocmin	src/lcthw/bstrlib.c	/^int ballocmin (bstring b, int len) {$/;"	f
bassign	src/lcthw/bstrlib.c	/^int bassign (bstring a, const_bstring b) {$/;"	f
bassignblk	src/lcthw/bstrlib.c	/^int bassignblk (bstring a, const void * s, int len) {$/;"	f
bassigncstr	src/lcthw/bstrlib.c	/^int bassigncstr (bstring a, const char * str) {$/;"	f
bassignformat	src/lcthw/bstrlib.c	/^int bassignformat (bstring b, const char * fmt, ...) {$/;"	f
bassigngets	src/lcthw/bstrlib.c	/^int bassigngets (bstring b, bNgetc getcPtr, void * parm, char terminator) {$/;"	f
bassignmidstr	src/lcthw/bstrlib.c	/^int bassignmidstr (bstring a, const_bstring b, int left, int len) {$/;"	f
bcatblk	src/lcthw/bstrlib.c	/^int bcatblk (bstring b, const void * s, int len) {$/;"	f
bcatcstr	src/lcthw/bstrlib.c	/^int bcatcstr (bstring b, const char * s) {$/;"	f
bchar	src/lcthw/bstrlib.h	201;"	d
bchare	src/lcthw/bstrlib.h	200;"	d
bconcat	src/lcthw/bstrlib.c	/^int bconcat (bstring b0, const_bstring b1) {$/;"	f
bconchar	src/lcthw/bstrlib.c	/^int bconchar (bstring b, char c) {$/;"	f
bcstrfree	src/lcthw/bstrlib.c	/^int bcstrfree (char * s) {$/;"	f
bdata	src/lcthw/bstrlib.h	199;"	d
bdatae	src/lcthw/bstrlib.h	198;"	d
bdataofs	src/lcthw/bstrlib.h	197;"	d
bdataofse	src/lcthw/bstrlib.h	196;"	d
bdelete	src/lcthw/bstrlib.c	/^int bdelete (bstring b, int pos, int len) {$/;"	f
bdestroy	src/lcthw/bstrlib.c	/^int bdestroy (bstring b) {$/;"	f
bfindreplace	src/lcthw/bstrlib.c	/^int bfindreplace (bstring b, const_bstring find, const_bstring repl, int pos) {$/;"	f
bfindreplacecaseless	src/lcthw/bstrlib.c	/^int bfindreplacecaseless (bstring b, const_bstring find, const_bstring repl, int pos) {$/;"	f
bformat	src/lcthw/bstrlib.c	/^bstring bformat (const char * fmt, ...) {$/;"	f
bformata	src/lcthw/bstrlib.c	/^int bformata (bstring b, const char * fmt, ...) {$/;"	f
bfromcstr	src/lcthw/bstrlib.c	/^bstring bfromcstr (const char * str) {$/;"	f
bfromcstralloc	src/lcthw/bstrlib.c	/^bstring bfromcstralloc (int mlen, const char * str) {$/;"	f
bgets	src/lcthw/bstrlib.c	/^bstring bgets (bNgetc getcPtr, void * parm, char terminator) {$/;"	f
bgetsa	src/lcthw/bstrlib.c	/^int bgetsa (bstring b, bNgetc getcPtr, void * parm, char terminator) {$/;"	f
binchr	src/lcthw/bstrlib.c	/^int binchr (const_bstring b0, int pos, const_bstring b1) {$/;"	f
binchrCF	src/lcthw/bstrlib.c	/^static int binchrCF (const unsigned char * data, int len, int pos, const struct charField * cf) {$/;"	f	file:
binchrr	src/lcthw/bstrlib.c	/^int binchrr (const_bstring b0, int pos, const_bstring b1) {$/;"	f
binchrrCF	src/lcthw/bstrlib.c	/^static int binchrrCF (const unsigned char * data, int pos, const struct charField * cf) {$/;"	f	file:
binsert	src/lcthw/bstrlib.c	/^int binsert (bstring b1, int pos, const_bstring b2, unsigned char fill) {$/;"	f
binsertch	src/lcthw/bstrlib.c	/^int binsertch (bstring b, int pos, int len, unsigned char fill) {$/;"	f
binstr	src/lcthw/bstrlib.c	/^int binstr (const_bstring b1, int pos, const_bstring b2) {$/;"	f
binstrcaseless	src/lcthw/bstrlib.c	/^int binstrcaseless (const_bstring b1, int pos, const_bstring b2) {$/;"	f
binstrr	src/lcthw/bstrlib.c	/^int binstrr (const_bstring b1, int pos, const_bstring b2) {$/;"	f
binstrrcaseless	src/lcthw/bstrlib.c	/^int binstrrcaseless (const_bstring b1, int pos, const_bstring b2) {$/;"	f
biseq	src/lcthw/bstrlib.c	/^int biseq (const_bstring b0, const_bstring b1) {$/;"	f
biseqcaseless	src/lcthw/bstrlib.c	/^int biseqcaseless (const_bstring b0, const_bstring b1) {$/;"	f
biseqcstr	src/lcthw/bstrlib.c	/^int biseqcstr (const_bstring b, const char * s) {$/;"	f
biseqcstrcaseless	src/lcthw/bstrlib.c	/^int biseqcstrcaseless (const_bstring b, const char * s) {$/;"	f
bisstemeqblk	src/lcthw/bstrlib.c	/^int bisstemeqblk (const_bstring b0, const void * blk, int len) {$/;"	f
bisstemeqcaselessblk	src/lcthw/bstrlib.c	/^int bisstemeqcaselessblk (const_bstring b0, const void * blk, int len) {$/;"	f
biswriteprotected	src/lcthw/bstrlib.h	295;"	d
bjoin	src/lcthw/bstrlib.c	/^bstring bjoin (const struct bstrList * bl, const_bstring sep) {$/;"	f
bl	src/lcthw/bstrlib.c	/^	struct bstrList * bl;$/;"	m	struct:genBstrList	typeref:struct:genBstrList::bstrList	file:
blength	src/lcthw/bstrlib.h	195;"	d
blengthe	src/lcthw/bstrlib.h	194;"	d
blk2bstr	src/lcthw/bstrlib.c	/^bstring blk2bstr (const void * blk, int len) {$/;"	f
blk2tbstr	src/lcthw/bstrlib.h	222;"	d
bltrimws	src/lcthw/bstrlib.c	/^int bltrimws (bstring b) {$/;"	f
bmid2tbstr	src/lcthw/bstrlib.h	228;"	d
bmidstr	src/lcthw/bstrlib.c	/^bstring bmidstr (const_bstring b, int left, int len) {$/;"	f
bninchr	src/lcthw/bstrlib.c	/^int bninchr (const_bstring b0, int pos, const_bstring b1) {$/;"	f
bninchrr	src/lcthw/bstrlib.c	/^int bninchrr (const_bstring b0, int pos, const_bstring b1) {$/;"	f
bpattern	src/lcthw/bstrlib.c	/^int bpattern (bstring b, int len) {$/;"	f
bread	src/lcthw/bstrlib.c	/^bstring bread (bNread readPtr, void * parm) {$/;"	f
breada	src/lcthw/bstrlib.c	/^int breada (bstring b, bNread readPtr, void * parm) {$/;"	f
breplace	src/lcthw/bstrlib.c	/^int breplace (bstring b1, int pos, int len, const_bstring b2,$/;"	f
brtrimws	src/lcthw/bstrlib.c	/^int brtrimws (bstring b) {$/;"	f
bsStatic	src/lcthw/bstrlib.h	206;"	d
bsStatic	src/lcthw/bstrlib.h	209;"	d
bsStaticBlkParms	src/lcthw/bstrlib.h	213;"	d
bsStaticMlen	src/lcthw/bstrlib.h	204;"	d
bsbufflength	src/lcthw/bstrlib.c	/^int bsbufflength (struct bStream * s, int sz) {$/;"	f
bscb	src/lcthw/bstrlib.c	/^static int bscb (void * parm, int ofs, int len) {$/;"	f	file:
bsclose	src/lcthw/bstrlib.c	/^void * bsclose (struct bStream * s) {$/;"	f
bseof	src/lcthw/bstrlib.c	/^int bseof (const struct bStream * s) {$/;"	f
bsetstr	src/lcthw/bstrlib.c	/^int bsetstr (bstring b0, int pos, const_bstring b1, unsigned char fill) {$/;"	f
bsopen	src/lcthw/bstrlib.c	/^struct bStream * bsopen (bNread readPtr, void * parm) {$/;"	f
bspeek	src/lcthw/bstrlib.c	/^int bspeek (bstring r, const struct bStream * s) {$/;"	f
bsplit	src/lcthw/bstrlib.c	/^struct bstrList * bsplit (const_bstring str, unsigned char splitChar) {$/;"	f
bsplitcb	src/lcthw/bstrlib.c	/^int bsplitcb (const_bstring str, unsigned char splitChar, int pos,$/;"	f
bsplits	src/lcthw/bstrlib.c	/^struct bstrList * bsplits (const_bstring str, const_bstring splitStr) {$/;"	f
bsplitscb	src/lcthw/bstrlib.c	/^int bsplitscb (const_bstring str, const_bstring splitStr, int pos,$/;"	f
bsplitstr	src/lcthw/bstrlib.c	/^struct bstrList * bsplitstr (const_bstring str, const_bstring splitStr) {$/;"	f
bsplitstrcb	src/lcthw/bstrlib.c	/^int bsplitstrcb (const_bstring str, const_bstring splitStr, int pos,$/;"	f
bsread	src/lcthw/bstrlib.c	/^int bsread (bstring r, struct bStream * s, int n) {$/;"	f
bsreada	src/lcthw/bstrlib.c	/^int bsreada (bstring r, struct bStream * s, int n) {$/;"	f
bsreadln	src/lcthw/bstrlib.c	/^int bsreadln (bstring r, struct bStream * s, char terminator) {$/;"	f
bsreadlna	src/lcthw/bstrlib.c	/^int bsreadlna (bstring r, struct bStream * s, char terminator) {$/;"	f
bsreadlns	src/lcthw/bstrlib.c	/^int bsreadlns (bstring r, struct bStream * s, const_bstring term) {$/;"	f
bsreadlnsa	src/lcthw/bstrlib.c	/^int bsreadlnsa (bstring r, struct bStream * s, const_bstring term) {$/;"	f
bssplitscb	src/lcthw/bstrlib.c	/^int bssplitscb (struct bStream * s, const_bstring splitStr,$/;"	f
bssplitstrcb	src/lcthw/bstrlib.c	/^int bssplitstrcb (struct bStream * s, const_bstring splitStr,$/;"	f
bstr2cstr	src/lcthw/bstrlib.c	/^char * bstr2cstr (const_bstring b, char z) {$/;"	f
bstrList	src/lcthw/bstrlib.h	/^struct bstrList {$/;"	s
bstrListAlloc	src/lcthw/bstrlib.c	/^int bstrListAlloc (struct bstrList * sl, int msz) {$/;"	f
bstrListAllocMin	src/lcthw/bstrlib.c	/^int bstrListAllocMin (struct bstrList * sl, int msz) {$/;"	f
bstrListCreate	src/lcthw/bstrlib.c	/^struct bstrList * bstrListCreate (void) {$/;"	f
bstrListDestroy	src/lcthw/bstrlib.c	/^int bstrListDestroy (struct bstrList * sl) {$/;"	f
bstr__alloc	src/lcthw/bstrlib.c	33;"	d	file:
bstr__free	src/lcthw/bstrlib.c	37;"	d	file:
bstr__memchr	src/lcthw/bstrlib.c	61;"	d	file:
bstr__memcmp	src/lcthw/bstrlib.c	57;"	d	file:
bstr__memcpy	src/lcthw/bstrlib.c	45;"	d	file:
bstr__memmove	src/lcthw/bstrlib.c	49;"	d	file:
bstr__memset	src/lcthw/bstrlib.c	53;"	d	file:
bstr__realloc	src/lcthw/bstrlib.c	41;"	d	file:
bstrchr	src/lcthw/bstrlib.h	91;"	d
bstrchrp	src/lcthw/bstrlib.c	/^int bstrchrp (const_bstring b, int c, int pos) {$/;"	f
bstrcmp	src/lcthw/bstrlib.c	/^int bstrcmp (const_bstring b0, const_bstring b1) {$/;"	f
bstrcpy	src/lcthw/bstrlib.c	/^bstring bstrcpy (const_bstring b) {$/;"	f
bstricmp	src/lcthw/bstrlib.c	/^int bstricmp (const_bstring b0, const_bstring b1) {$/;"	f
bstring	src/lcthw/bstrlib.h	/^typedef struct tagbstring * bstring;$/;"	t	typeref:struct:tagbstring
bstrncmp	src/lcthw/bstrlib.c	/^int bstrncmp (const_bstring b0, const_bstring b1, int n) {$/;"	f
bstrnicmp	src/lcthw/bstrlib.c	/^int bstrnicmp (const_bstring b0, const_bstring b1, int n) {$/;"	f
bstrrchr	src/lcthw/bstrlib.h	92;"	d
bstrrchrp	src/lcthw/bstrlib.c	/^int bstrrchrp (const_bstring b, int c, int pos) {$/;"	f
bsunread	src/lcthw/bstrlib.c	/^int bsunread (struct bStream * s, const_bstring b) {$/;"	f
btfromblk	src/lcthw/bstrlib.h	227;"	d
btfromblkltrimws	src/lcthw/bstrlib.h	252;"	d
btfromblkrtrimws	src/lcthw/bstrlib.h	264;"	d
btfromblktrimws	src/lcthw/bstrlib.h	276;"	d
btfromcstr	src/lcthw/bstrlib.h	217;"	d
btolower	src/lcthw/bstrlib.c	/^int btolower (bstring b) {$/;"	f
btoupper	src/lcthw/bstrlib.c	/^int btoupper (bstring b) {$/;"	f
btrimws	src/lcthw/bstrlib.c	/^int btrimws (bstring b) {$/;"	f
btrunc	src/lcthw/bstrlib.c	/^int btrunc (bstring b, int n) {$/;"	f
buff	src/lcthw/bstrlib.c	/^	bstring buff;		\/* Buffer for over-reads *\/$/;"	m	struct:bStream	file:
buildCharField	src/lcthw/bstrlib.c	/^static int buildCharField (struct charField * cf, const_bstring b) {$/;"	f	file:
bvcformata	src/lcthw/bstrlib.c	/^int bvcformata (bstring b, int count, const char * fmt, va_list arg) {$/;"	f
bvformata	src/lcthw/bstrlib.h	136;"	d
bwriteallow	src/lcthw/bstrlib.h	294;"	d
bwriteprotect	src/lcthw/bstrlib.h	293;"	d
charField	src/lcthw/bstrlib.c	/^struct charField { LONG_TYPE content[CFCLEN]; };$/;"	s	file:
charField	src/lcthw/bstrlib.c	/^struct charField { unsigned char content[CFCLEN]; };$/;"	s	file:
check	src/lcthw/dbg.h	41;"	d
check_debug	src/lcthw/dbg.h	46;"	d
check_mem	src/lcthw/dbg.h	45;"	d
clean_errno	src/lcthw/dbg.h	33;"	d
const_bstring	src/lcthw/bstrlib.h	/^typedef const struct tagbstring * const_bstring;$/;"	t	typeref:struct:tagbstring
content	src/lcthw/bstrlib.c	/^struct charField { LONG_TYPE content[CFCLEN]; };$/;"	m	struct:charField	file:
content	src/lcthw/bstrlib.c	/^struct charField { unsigned char content[CFCLEN]; };$/;"	m	struct:charField	file:
count	src/lcthw/list.h	/^	int count;$/;"	m	struct:List
cstr2bstr	src/lcthw/bstrlib.h	40;"	d
cstr2tbstr	src/lcthw/bstrlib.h	216;"	d
data	src/lcthw/bstrlib.h	/^	unsigned char * data;$/;"	m	struct:tagbstring
debug	src/lcthw/dbg.h	27;"	d
debug	src/lcthw/dbg.h	29;"	d
downcase	src/lcthw/bstrlib.c	559;"	d	file:
entry	src/lcthw/bstrlib.h	/^    bstring * entry;$/;"	m	struct:bstrList
exvsnprintf	src/lcthw/bstrlib.c	2748;"	d	file:
exvsnprintf	src/lcthw/bstrlib.c	2753;"	d	file:
exvsnprintf	src/lcthw/bstrlib.c	2763;"	d	file:
findreplaceengine	src/lcthw/bstrlib.c	/^static int findreplaceengine (bstring b, const_bstring find, const_bstring repl, int pos, instr_fnptr instr) {$/;"	f	file:
first	src/lcthw/list.h	/^	ListNode *first;$/;"	m	struct:List
genBstrList	src/lcthw/bstrlib.c	/^struct genBstrList {$/;"	s	file:
instr_fnptr	src/lcthw/bstrlib.c	/^typedef int (*instr_fnptr) (const_bstring s1, int pos, const_bstring s2);$/;"	t	file:
invertCharField	src/lcthw/bstrlib.c	/^static void invertCharField (struct charField * cf) {$/;"	f	file:
isEOF	src/lcthw/bstrlib.c	/^	int isEOF;		\/* track file's EOF state *\/$/;"	m	struct:bStream	file:
last	src/lcthw/list.h	/^	ListNode *last;$/;"	m	struct:List
lcthw_List_h	src/lcthw/list.h	2;"	d
list	tests/lists_tests.c	/^static List *list = NULL;$/;"	v	file:
log_err	src/lcthw/dbg.h	35;"	d
log_info	src/lcthw/dbg.h	39;"	d
log_warn	src/lcthw/dbg.h	37;"	d
maxBuffSz	src/lcthw/bstrlib.c	/^	int maxBuffSz;$/;"	m	struct:bStream	file:
mlen	src/lcthw/bstrlib.h	/^	int mlen;$/;"	m	struct:tagbstring
mlen	src/lcthw/bstrlib.h	/^    int qty, mlen;$/;"	m	struct:bstrList
mu_assert	tests/minunit.h	11;"	d
mu_run_test	tests/minunit.h	12;"	d
mu_suite_start	tests/minunit.h	9;"	d
next	src/lcthw/list.h	/^	struct ListNode *next;$/;"	m	struct:ListNode	typeref:struct:ListNode::ListNode
parm	src/lcthw/bstrlib.c	/^	void * parm;		\/* The stream handle for core stream *\/$/;"	m	struct:bStream	file:
prev	src/lcthw/list.h	/^	struct ListNode *prev;$/;"	m	struct:ListNode	typeref:struct:ListNode::ListNode
qty	src/lcthw/bstrlib.h	/^    int qty, mlen;$/;"	m	struct:bstrList
readFnPtr	src/lcthw/bstrlib.c	/^	bNread readFnPtr;	\/* fread compatible fnptr for core stream *\/$/;"	m	struct:bStream	file:
sentinel	src/lcthw/dbg.h	43;"	d
setInCharField	src/lcthw/bstrlib.c	1280;"	d	file:
setInCharField	src/lcthw/bstrlib.c	1290;"	d	file:
slen	src/lcthw/bstrlib.h	/^	int slen;$/;"	m	struct:tagbstring
snapUpSize	src/lcthw/bstrlib.c	/^static int snapUpSize (int i) {$/;"	f	file:
tagbstring	src/lcthw/bstrlib.h	/^struct tagbstring {$/;"	s
test1	tests/lists_tests.c	/^char *test1 = "test1 data";$/;"	v
test2	tests/lists_tests.c	/^char *test2 = "test2 data";$/;"	v
test3	tests/lists_tests.c	/^char *test3 = "test3 data";$/;"	v
testInCharField	src/lcthw/bstrlib.c	1279;"	d	file:
testInCharField	src/lcthw/bstrlib.c	1289;"	d	file:
test_all	tests/bstrlib_tests.c	/^RUN_TESTS(test_all);$/;"	v
test_all	tests/bstrlib_tests.c	/^char * test_all(){$/;"	f
test_create	tests/lists_tests.c	/^char *test_create(){$/;"	f
test_destroy	tests/lists_tests.c	/^char *test_destroy(){$/;"	f
test_operations	tests/bstrlib_tests.c	/^static char * test_operations()$/;"	f	file:
test_push_pop	tests/lists_tests.c	/^char *test_push_pop(){$/;"	f
test_remove	tests/lists_tests.c	/^char *test_remove(){$/;"	f
test_shift	tests/lists_tests.c	/^char *test_shift(){$/;"	f
test_unshift	tests/lists_tests.c	/^char *test_unshift(){$/;"	f
tests_run	tests/minunit.h	/^int tests_run;$/;"	v
upcase	src/lcthw/bstrlib.c	558;"	d	file:
value	src/lcthw/list.h	/^	void *value;$/;"	m	struct:ListNode
wspace	src/lcthw/bstrlib.c	560;"	d	file:
